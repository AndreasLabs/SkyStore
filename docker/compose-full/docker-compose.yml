version: '3.8'

services:

  web:
    build:
      context: ../..
      dockerfile: web/Dockerfile
    ports:
      - "4150:80"
    depends_on:
      - app
    network_mode: host
    restart: unless-stopped

  app:
    build:
      context: ../..
      dockerfile: server/Dockerfile
    ports:
      - "4151:4000"
    environment:
      - REDIS_URL=redis://localhost:4162
      - MINIO_ENDPOINT=localhost
      - MINIO_PORT=4164
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - NODEODM_URL=http://localhost:4161
      - POSTGRES_HOST=localhost
      - POSTGRES_PORT=4152
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=skystore
      - DATABASE_URL=postgresql://postgres:postgres@localhost:4152/skystore
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
      minio:
        condition: service_started
    network_mode: host
    restart: unless-stopped

  postgres:
    image: postgres:16
    ports:
      - "4152:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=skystore
    volumes:
      - postgres-data:/var/lib/postgresql/data
    network_mode: host
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d skystore"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    command: ["postgres", "-c", "logging_collector=on"]

  otel-collector:
    image: signoz/signoz-otel-collector:0.88.7
    ports:
      - "4154:4317"    # OTLP gRPC receiver
      - "4155:4318"    # OTLP http receiver
    network_mode: host
    restart: unless-stopped

  clickhouse:
    image: clickhouse/clickhouse-server:23.11.2-alpine
    ports:
      - "4156:9000"
      - "4157:8123"
      - "4158:9181"
    volumes:
      - clickhouse-data:/var/lib/clickhouse
    network_mode: host
    restart: unless-stopped

  query-service:
    image: signoz/query-service:0.35.1
    ports:
      - "4159:6060"
    environment:
      - ClickHouseUrl=tcp://localhost:4156
    depends_on:
      - clickhouse
    network_mode: host
    restart: unless-stopped

  frontend:
    image: signoz/frontend:0.35.1
    ports:
      - "4160:3301"
    depends_on:
      - query-service
    network_mode: host
    restart: unless-stopped

  nodeodm:
    image: opendronemap/nodeodm:latest
    ports:
      - "4161:3000"
    volumes:
      - nodeodm-data:/var/www/data
    environment:
      - PORT=3000
      - HOSTNAME=localhost
      - MAX_IMAGES=500
      - MAX_WORKERS=2
    network_mode: host
    restart: unless-stopped

  redis:
    image: redis/redis-stack:latest
    ports:
      - "4162:6379"
      - "4163:8001"
    environment:
      - REDIS_ARGS="--appendonly yes"
   # volumes:
     # - redis-data:/data
    network_mode: host
    restart: unless-stopped

  minio:
    image: minio/minio:latest
    ports:
      - "4164:9000"  # API port
      - "4165:9001"  # Console port
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    volumes:
      - minio-data:/data
    network_mode: host
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 30s
      timeout: 20s
      retries: 3
    restart: unless-stopped

  prefect:
    image: prefecthq/prefect:3-python3.12
    ports:
      - "4200:4200"
    command: prefect server start --host 0.0.0.0
    network_mode: host
    restart: unless-stopped

volumes:
  redis-data:
    driver: local
  minio-data:
    driver: local
  nodeodm-data:
    driver: local
  clickhouse-data:
    driver: local
  postgres-data:
    driver: local